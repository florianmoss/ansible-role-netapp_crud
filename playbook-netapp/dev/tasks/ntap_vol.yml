  - name: NTAP - Volume Activity
    na_ontap_volume:
     hostname: "{{ cluster }}"
     username: "{{ user }}"
     password: "{{ pass }}"
     vserver: "{{ vserver }}"
     name: "{{ volname }}"
     is_infinite: False
     aggregate_name: "{{ item.1 }}"
     size: "{{ volsize }}"
     size_unit: mb
     space_guarantee: none
#     efficiency_policy: "{{ deduppolicy }}"
     percent_snapshot_space: 0
     type: RW
     volume_security_style: unix
     state: "{{ state }}"
    register: result
    with_nested:
    - "{{ ontap_facts.vserver_info[lookup('vars','vlun')].aggr_list.aggr_name }}"
    - "{{ ontap_facts.aggregate_info }}"
    when:
    - item.1.find("root") == -1
    - item.1.find("{{ disktype }}") != -1
    - "{{ ontap_facts.aggregate_info[item.0].aggr_space_attributes.percent_used_capacity | int }} < {{ maxpercentused }}"
    - result is not defined or result.rc != 0
    ignore_errors: yes



# TODO:
# - if aggregate is not SSD run a routing to get all the dedup policy/avi_schedule
#   and assign one 
# - dynamic volume_security_style

